README: xADP
$Id:$

Contents
--------
    1. Introduction
    2. Compiling and Installing xADP
    3. Setting up MySQL
    4. The xADP Directory Structure
    5. Starting and Stopping Servers
    6. Creating New Server Types
    7. Server Configuration Files
    8. Using Tcl Packages

1. Introduction
---------------

The X AOLserver Dynamic Platform (xADP) is a "batteries included" distribution
for AOLserver. It includes, but is not limited to, Tcl, AOLserver, MySQL, cURL,
TclCurl, tDOM, Tcllib, nsrpc, and nsdb. Using a single Makefile to build and 
link these features together, xADP offers an out-of-the-box experience for i
AOLserver. xADP provides simple mechanisms for starting and stopping servers, 
server communication via RPC, and a nsdb Tcl package that wraps the ns_db API 
for ease of use.

2. Compiling and Installing xADP
--------------------------------

The default installation path is /usr/local/xadp. To change this, edit the
Makefile.inc file and set the PREFIX variable to the appropriate
directory. *** Make sure you have rights to write to the parent directory.

The following command will build all bundled software:

    % make install

Set the following environment variables and aliases. Make sure to use the path
where you installed xADP as the value of the XADP variable:

    export XADP=/usr/local/xadp
    alias start-aolserver='${XADP}/bin/startserver'
    alias stop-aolserver='${XADP}/bin/stopserver'

3. Setting up MySQL
-------------------

If you already have an installation of MySQL running you can skip this step. 
You do not need to use the bundled installation.

Before you can use the bundled MySQL installation you first need to set up the
grant tables and install the test db. MySQL is set up to run as the user that
installed xADP. If you would prefer to run MySQL as a diifferent user, follow
the set up instructions at the MySQL web site:

    http://dev.mysql.com/doc/refman/5.0/en/quick-install.html

Otherwise continue with these installation instructions:

    % cd ${XADP}/platform/<your platform>/mysql
    % bin/mysql_install_db --force

That's it. You are now ready to start MySQL. Be sure to use the correct user
name:

    % bin/mysqld_safe --user=<username>  &
    % bin/mysql

Exit out of the mysql interface by typing 'exit' then pressing enter. To stop 
the MySQL server you need to specify a db user that has 'shutdown' privileges. 
The following example uses the root user. The password for the root user is 
currently blank, so hit enter when prompted:

    % bin/mysqladmin shutdown -u root -p
    
Be sure to secure your MySQL installation by changing the root password and 
removing unwanted access. See the article "Securing the Initial MySQL Accounts"
on the MySQL dev site:

    http://dev.mysql.com/doc/refman/5.0/en/default-privileges.html

You might also want to set the following environment variables and aliases. Be
sure to use the correct user name:

    export PATH=${PATH}:${XADPPLATFORM}/mysql/bin
    export XADPPLATFORM=${XADP}/platform/<your platform>

    alias start-mysql='$XADPPLATFORM/mysql/bin/mysqld_safe --user=<username> &'
    alias stop-mysql='$XADPPLATFORM/mysql/bin/mysqladmin shutdown -u root -p'

4. The xADP Directory Structure
-------------------------------

    % cd $XADP
    % ls -l
    drwxr-xr-x   4 Michael  Michael  136 Aug 18 12:21 bin
    drwxr-xr-x   5 Michael  Michael  170 Aug 17 16:05 cfg
    drwxr-xr-x   3 Michael  Michael  102 Aug 17 16:07 lib
    drwxr-xr-x   8 Michael  Michael  272 Aug 18 12:25 logs
    drwxr-xr-x   3 Michael  Michael  102 Aug 17 16:08 pages
    drwxr-xr-x   3 Michael  Michael  102 Aug 17 15:53 platform
    drwxr-xr-x   4 Michael  Michael  136 Aug 18 12:25 servers

bin:
    Contains executables to start and stop servers.
cfg:
    Contains configuration files. See the section "Server Configuration Files"
    for more information.
lib:
    Contains Tcl packages. Place all your Tcl packages in this directory.
    All servers will look for packages in this directory.
logs:
    Contains all the logs for all the servers and the pid file for each 
    running server.
pages:
    Contains all pages. All servers of the same "type" will share the same
    pageroot.
platform:
    Contains platform specific binaries, libraries, and packages.
servers:
    Contains server-specific directories (if needed).

4. Starting and Stopping Servers
--------------------------------

The bin directory comes with executables to stop and start servers. You can 
execute these files directly or use the their environment aliases.

    % cd $XADP/bin
    % ./startserver -help
    Usage: startserver ?-flag value?...

        -help            Prints this message
        -servertype      The type of server (default is 'generic')
        -httpport        port for incoming requests (default is '8080')
        -nscpport        port for the nscp module
        -user            The user to run the server as
        -group           The group to run the server as
        -foreground      Run in foreground mode
        -version         Returns the nsd version info

To start a 'generic' AOLserver on port '8080' in the foreground:

    % ./startserver -foreground

Default values for -servertype and -httpport are 'generic' and '8080' so you 
did not need to specify those params. To stop the server, press ctl+c.

Start the server again, this time in the background:

    % ./startserver
    Server: generic
    Http port: 8080
    Nscp port: 
    Server log: /usr/local/xadp/logs/generic.8080.server.log

    Starting server...
    Server "generic" started on port 8080 (pid: 23192).

You can start another 'generic' server on a different port and specify
a port for the server's nscp module:

    % ./startserver -httpport 8081 -nscpport 8082
    Server: generic
    Http port: 8081
    Nscp port: 8082
    Server log: /usr/local/xadp/logs/generic.8080.server.log

    Starting server...
    Server "generic" started on port 8080 (pid: 23192). 

You now have 2 AOLservers listening on different ports, both  serving pages
from the $XADP/pages/generic directory. The logs for the two servers are in 
$XADP/logs:

    % ls -l $XADP/logs
    total 120
    -rw-r--r--   1 Michael  Michael      0 Aug 17 16:08 generic.8080.access.log
    -rw-r--r--   1 Michael  Michael      6 Aug 18 12:59 generic.8080.pid
    -rw-r--r--   1 Michael  Michael  38770 Aug 18 12:59 generic.8080.server.log
    -rw-r--r--   1 Michael  Michael      0 Aug 18 12:25 generic.8081.access.log
    -rw-r--r--   1 Michael  Michael      6 Aug 18 12:59 generic.8081.pid
    -rw-r--r--   1 Michael  Michael  10259 Aug 18 12:59 generic.8081.server.log

To stop the server running on port 8081:

    % ./stopserver -httpport 8081
    Stopping server "generic" on port 8081 (pid: 23108)...
    Shutdown pending...
    Shutdown complete.

To stop the server running on port 8080:

    % ./stopserver 
    Stopping server "generic" on port 8080 (pid: 23192)...
    Shutdown pending...
    Shutdown complete.

6. Creating New Server Types
----------------------------

You do not need to do anything special to create a new server type. Just
specify the name of the type when starting the server:

    % ./startserver -servertype frontend -httpport 8201
    % Server: frontend
    % Http port: 8201
    % Nscp port: 
    % Server log: /usr/local/xadp/logs/frontend.8201.server.log

    % Starting server...
    % Server "frontend" started on port 8201 (pid: 23292).

A pages directory was created automatically if it did not already exists and
the server is using it for the pageroot.

    % ls -l $XADP/pages
    total 0
    drwxr-xr-x   2 Michael  Michael  68 Aug 18 13:05 frontend
    drwxr-xr-x   2 Michael  Michael  68 Aug 17 16:08 generic

Logs are all in the logs directory:

    % ls -l $XADP/logs
    total 128
    -rw-r--r--   1 Michael  Michael      0 Aug 18 13:05 frontend.8201.access.log
    -rw-r--r--   1 Michael  Michael      6 Aug 18 13:05 frontend.8201.pid
    -rw-r--r--   1 Michael  Michael   4252 Aug 18 13:06 frontend.8201.server.log
    -rw-r--r--   1 Michael  Michael      0 Aug 17 16:08 generic.8080.access.log
    -rw-r--r--   1 Michael  Michael  40555 Aug 18 13:08 generic.8080.server.log
    -rw-r--r--   1 Michael  Michael      0 Aug 18 12:25 generic.8081.access.log
    -rw-r--r--   1 Michael  Michael  12044 Aug 18 13:08 generic.8081.server.log

A server-specific directory was created in the $XADP/servers directory in case 
any modules or Tcl packages use that directory:

    % ls -l $XADP/servers
    total 0
    drwxr-xr-x   3 Michael  Michael  102 Aug 18 13:05 frontend.8201
    drwxr-xr-x   3 Michael  Michael  102 Aug 17 16:08 generic.8080
    drwxr-xr-x   3 Michael  Michael  102 Aug 18 12:25 generic.8081

To stop the 'frontend' server on port '8201':

    % ./stopserver -servertype frontend -httpport 8201
    Stopping server "frontend" on port 8201 (pid: 23292)...
    Shutdown pending...
    Shutdown complete.

7. Server Configuration Files
-----------------------------

Take a look at the cfg dir:

    % cd $XADP/cfg
    % ls -l
    -rw-r--r--   1 Michael  Michael  3246 Aug 18 16:22 common.cfg
    drwxr-xr-x   3 Michael  Michael   102 Aug 18 16:22 generic

Notice that there is a directory called 'generic'. This is where all the cfg
files for the 'generic' server type are kept. You can create a directory for
each server-type you have. 

The common.cfg file is the file that is passed to the nsd binary by the 
startserver script. It sources all *.cfg files in the type-specific directory. 
It it also has params common to all server types. It sources the files in the
type-specific directory first so they can override any common settings.

Since config params are returned using a ns_set, the first param set is the 
one returned by the ns_config API and usually the one that is used by 
the server at start up. By sourcing the type-specific cfg files first, their 
params take precedence over the same params set later by the common.cfg file. 
This allows you to set a common param in the common.cfg file, but then 
'override' it for a specific server type if you need.

It also allows you to specify different Tcl packages to load at startup for the 
different server types. See the section 'Using Tcl Packages' for information 
on loading Tcl packages at startup.

8. Using Tcl Packages
---------------------

It is encouraged to use Tcl packages with xAPD. Place Tcl packages in the 
$XADP/lib directory. A package called nsrpc-1.0.0 has been included with the 
distribution.

    % ls -l $XADP/lib
    total 0
    drwxr-xr-x   4 Michael  Michael  136 Aug 17 16:10 nsrpc-1.0.0

See the README file that comes with the nsrpc-1.0.0 src for more information on
configuration and usage. Other platform-specific packages have also been 
included:

    % ls -l $XADP/platform/Darwin_i386
    total 56
    lrwxr-xr-x    1 Michael  Michael   14 Aug 17 15:54 aolserver -> aolserver-head
    drwxr-xr-x    9 Michael  Michael  306 Aug 17 15:54 aolserver-head
    lrwxr-xr-x    1 Michael  Michael   11 Aug 17 15:55 curl -> curl-7.16.2
    drwxr-xr-x    6 Michael  Michael  204 Aug 17 15:55 curl-7.16.2
    lrwxr-xr-x    1 Michael  Michael   12 Aug 17 16:05 mysql -> mysql-5.0.37
    drwxr-xr-x   11 Michael  Michael  374 Aug 17 16:05 mysql-5.0.37
    lrwxr-xr-x    1 Michael  Michael   10 Aug 17 15:53 tcl -> tcl-8.4.15
    drwxr-xr-x    6 Michael  Michael  204 Aug 17 15:53 tcl-8.4.15
    lrwxr-xr-x    1 Michael  Michael   14 Aug 17 15:56 tclcurl -> tclcurl-7.16.2
    drwxr-xr-x    6 Michael  Michael  204 Aug 17 15:56 tclcurl-7.16.2
    lrwxr-xr-x    1 Michael  Michael   10 Aug 17 16:06 tcllib -> tcllib-1.9
    drwxr-xr-x    5 Michael  Michael  170 Aug 17 16:06 tcllib-1.9
    lrwxr-xr-x    1 Michael  Michael   10 Aug 17 15:56 tdom -> tdom-0.8.1
    drwxr-xr-x    6 Michael  Michael  204 Aug 17 15:56 tdom-0.8.1

These paths are added to the Tcl ::auto_path variable at server startup. 
This is done by the following config settings in the common.cfg.

    % vi $XADP/cfg/common.cfg

    (line 101)
    ns_section "ns/server/${serverName}/packages"
        ns_param library ${home}/lib
        ns_param library ${platformDir}/tdom/lib
        ns_param library ${platformDir}/tclcurl/lib
        ns_param library ${platformDir}/tcllib/lib
        ns_param require tdom
        ns_param require TclCurl
        ns_param require nsrpc

The 'require' prarm will load the package at start up and run the nsinit and 
nspostinit procs if applicable. See the packages.tcl file that comes with
AOLserver:

        $XADP/platform/<Your platform>/aolserver/modules/tcl/packages.tcl
